<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>愿你历尽千帆，归来仍是少年！</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-01-20T10:23:39.676Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>BEYOND233</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Fastjson的一些坑</title>
    <link href="http://yoursite.com/2020/01/20/Fastjson%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
    <id>http://yoursite.com/2020/01/20/Fastjson%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</id>
    <published>2020-01-20T10:11:36.000Z</published>
    <updated>2020-01-20T10:23:39.676Z</updated>
    
    <content type="html"><![CDATA[<h2 id="bug描述"><a href="#bug描述" class="headerlink" title="bug描述"></a>bug描述</h2><p> 开发环境：<code>Tomcat</code> ， <code>IDEA</code> ， <code>Fastjson</code>对应的jar包版本的是<code>1.2.62</code><br>在<code>servlet</code>中使用<code>Fastjson</code>处理json数据时，浏览器显示以下错误信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.lang.NoClassDefFoundError: com&#x2F;alibaba&#x2F;fastjson&#x2F;JSON</span><br></pre></td></tr></table></figure><p>我之前已经在项目中已经导入了<code>Fastjson</code>的Jar包，运行项目却报了这个错，真是日了狗了</p><h2 id="产生bug原因"><a href="#产生bug原因" class="headerlink" title="产生bug原因"></a>产生bug原因</h2><p>该项目已经部署过，使用jason所用的包是后面加的，我在myeclipse里面配置了，但是myeclipse不会自动把这些包重新部署到tomcat中去，所以，当网站运行起来后，就报找不到类的错了。</p><h2 id="处理办法"><a href="#处理办法" class="headerlink" title="处理办法"></a>处理办法</h2><p>把<code>Fastjson</code>对应的jar包部署到<code>tomcat</code>中去，即把相应的jar包复制到<code>tcomcat</code>目录下的<code>lib</code>目录下，即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;bug描述&quot;&gt;&lt;a href=&quot;#bug描述&quot; class=&quot;headerlink&quot; title=&quot;bug描述&quot;&gt;&lt;/a&gt;bug描述&lt;/h2&gt;&lt;p&gt; 开发环境：&lt;code&gt;Tomcat&lt;/code&gt; ， &lt;code&gt;IDEA&lt;/code&gt; ， &lt;code&gt;Fast
      
    
    </summary>
    
    
    
      <category term="Fastjson" scheme="http://yoursite.com/tags/Fastjson/"/>
    
      <category term="bug" scheme="http://yoursite.com/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>Fastjson的使用</title>
    <link href="http://yoursite.com/2020/01/20/Fastjson%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/01/20/Fastjson%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-01-20T06:51:59.000Z</published>
    <updated>2020-01-21T05:16:45.669Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Fastjosn常用的方法"><a href="#Fastjosn常用的方法" class="headerlink" title="Fastjosn常用的方法"></a>Fastjosn常用的方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public static final Object parse(String text); 　　&#x2F;&#x2F; 把JSON文本parse为JSONObject或者JSONArray </span><br><span class="line"></span><br><span class="line"> public static final JSONObject parseObject(String text)；　　 &#x2F;&#x2F; 把JSON文本parse成JSONObject </span><br><span class="line"></span><br><span class="line"> public static final T parseObject(String text, Class clazz); 　　&#x2F;&#x2F; 把JSON文本parse为JavaBean </span><br><span class="line"></span><br><span class="line"> public static final JSONArray parseArray(String text); 　　&#x2F;&#x2F; 把JSON文本parse成JSONArray </span><br><span class="line"></span><br><span class="line"> public static final List parseArray(String text, Class clazz); 　　&#x2F;&#x2F;把JSON文本parse成JavaBean集合 </span><br><span class="line"></span><br><span class="line"> public static final String toJSONString(Object object); 　　&#x2F;&#x2F; 将JavaBean序列化为JSON文本 </span><br><span class="line"></span><br><span class="line"> public static final String toJSONString(Object object, boolean prettyFormat); 　　&#x2F;&#x2F; 将JavaBean序列化为带格式的JSON文本 </span><br><span class="line"></span><br><span class="line"> public static final Object toJSON(Object javaObject); 　　&#x2F;&#x2F;将JavaBean转换为JSONObject或者JSONArray。</span><br></pre></td></tr></table></figure><h2 id="Fastjson字符串转List-lt-Map-lt-String-Object-gt-gt-或者List-的用法"><a href="#Fastjson字符串转List-lt-Map-lt-String-Object-gt-gt-或者List-的用法" class="headerlink" title="Fastjson字符串转List&lt;Map&lt;String,Object&gt;&gt;(), 或者List()的用法;"></a>Fastjson字符串转List&lt;Map&lt;String,Object&gt;&gt;(), 或者List<String>()的用法;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Map&lt;String, Object&gt;&gt; list &#x3D; JSONObject.parseObject(respJson, new TypeReference&lt;List&lt;Map&lt;String, Object&gt;&gt;&gt;() &#123;&#125;);</span><br></pre></td></tr></table></figure><h2 id="java对象转json字符串"><a href="#java对象转json字符串" class="headerlink" title="java对象转json字符串"></a>java对象转json字符串</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String jsonString &#x3D; JSON.toJSONString(orange);</span><br></pre></td></tr></table></figure><h2 id="json字符串转java对象"><a href="#json字符串转java对象" class="headerlink" title="json字符串转java对象"></a>json字符串转java对象</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Fruit fruit &#x3D; JSON.parseObject(jsonString,Fruit.class);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Fastjosn常用的方法&quot;&gt;&lt;a href=&quot;#Fastjosn常用的方法&quot; class=&quot;headerlink&quot; title=&quot;Fastjosn常用的方法&quot;&gt;&lt;/a&gt;Fastjosn常用的方法&lt;/h2&gt;&lt;figure class=&quot;highlight plai
      
    
    </summary>
    
    
    
      <category term="json" scheme="http://yoursite.com/tags/json/"/>
    
      <category term="Fastjosn" scheme="http://yoursite.com/tags/Fastjosn/"/>
    
  </entry>
  
  <entry>
    <title>ajax请求后端响应数据乱码问题解决</title>
    <link href="http://yoursite.com/2020/01/19/ajax%E8%AF%B7%E6%B1%82%E5%90%8E%E7%AB%AF%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://yoursite.com/2020/01/19/ajax%E8%AF%B7%E6%B1%82%E5%90%8E%E7%AB%AF%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</id>
    <published>2020-01-19T15:45:44.000Z</published>
    <updated>2020-01-19T16:01:04.302Z</updated>
    
    <content type="html"><![CDATA[<h2 id="response对象要设置编码格式"><a href="#response对象要设置编码格式" class="headerlink" title="response对象要设置编码格式"></a>response对象要设置编码格式</h2><p><code>response</code>对象要设置<code>contentType</code>和<code>characterEncoding</code>为<code>UTF-8</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(&quot;text&#x2F;html;charset&#x3D;UTF-8&quot;);</span><br><span class="line">response.setCharacterEncoding(&quot;UTF-8&quot;);</span><br></pre></td></tr></table></figure><h2 id="输出流的问题"><a href="#输出流的问题" class="headerlink" title="输出流的问题"></a>输出流的问题</h2><p>如果给前端响应数据使用的是通过<code>response</code>对象得到的输出流对象，这一步一定要在<code>response</code>设置编码格式为<code>UTF-8</code>之后！！！（血泪教训）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">response.setCharacterEncoding(&quot;UTF-8&quot;);</span><br><span class="line">response.setContentType(&quot;text&#x2F;html;charset&#x3D;UTF-8&quot;);</span><br><span class="line">.....</span><br><span class="line">PrintWriter writer &#x3D; response.getWriter();&#x2F;&#x2F;这一步一定要在response设置编码格式为UTF-8之后</span><br><span class="line">writer.println(&quot;收到请求&quot;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;response对象要设置编码格式&quot;&gt;&lt;a href=&quot;#response对象要设置编码格式&quot; class=&quot;headerlink&quot; title=&quot;response对象要设置编码格式&quot;&gt;&lt;/a&gt;response对象要设置编码格式&lt;/h2&gt;&lt;p&gt;&lt;code&gt;resp
      
    
    </summary>
    
    
      <category term="乱码" scheme="http://yoursite.com/categories/%E4%B9%B1%E7%A0%81/"/>
    
    
      <category term="ajax" scheme="http://yoursite.com/tags/ajax/"/>
    
      <category term="乱码" scheme="http://yoursite.com/tags/%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>令牌机制（token）防止表单重复提交</title>
    <link href="http://yoursite.com/2020/01/16/%E4%BB%A4%E7%89%8C%E6%9C%BA%E5%88%B6%EF%BC%88token%EF%BC%89%E9%98%B2%E6%AD%A2%E8%A1%A8%E5%8D%95%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4/"/>
    <id>http://yoursite.com/2020/01/16/%E4%BB%A4%E7%89%8C%E6%9C%BA%E5%88%B6%EF%BC%88token%EF%BC%89%E9%98%B2%E6%AD%A2%E8%A1%A8%E5%8D%95%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4/</id>
    <published>2020-01-16T11:43:41.000Z</published>
    <updated>2020-01-16T13:10:39.799Z</updated>
    
    <content type="html"><![CDATA[<h2 id="令牌机制"><a href="#令牌机制" class="headerlink" title="令牌机制"></a>令牌机制</h2><p><code>token</code>即标志、记号的意思，在IT领域也叫作<code>令牌</code>。其实说的更通俗点可以叫暗号，在一些数据传输之前，要先进行暗号的核对，不同的暗号被授权不同的数据操作。</p><h2 id="造成表单重复提交的原因"><a href="#造成表单重复提交的原因" class="headerlink" title="造成表单重复提交的原因"></a>造成表单重复提交的原因</h2><p>1、由于服务器缓存慢或网络延迟的原因，重复点击提交按钮<br>2、已经提交成功，刷新界面（forward）<br>3、已经提交成功，通过回退再次点击提交按钮</p><h2 id="使用令牌机制解决表单的重复提交问题"><a href="#使用令牌机制解决表单的重复提交问题" class="headerlink" title="使用令牌机制解决表单的重复提交问题"></a>使用令牌机制解决表单的重复提交问题</h2><p><strong>1.、在客户端界面生成令牌</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">&#x2F;&#x2F;生成一个不重复的令牌</span><br><span class="line">String uuid&#x3D;UUID.randomUUID.toString();</span><br><span class="line">session.setAttribute(&quot;token&quot;,uuid);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p><strong>2、 在表单提交时附加上令牌</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;demoServlet&quot;&gt;</span><br><span class="line">...</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;token&quot; value&#x3D;&quot;&lt;%&#x3D;uuid&gt;&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交表单&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure><p><strong>3、在服务器端验证令牌</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public void demoServlet()&#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;1.从session中取出令牌</span><br><span class="line">String token&#x3D;session.getAttribute(&quot;token&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;2.从页面提交的数据中取出令牌</span><br><span class="line">String pageToken&#x3D;request.getParameter(&quot;token&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;3.移除session中的令牌</span><br><span class="line">session.removeAttribute(&quot;token&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;4.比较两个令牌是否相同？</span><br><span class="line">&#x2F;&#x2F;4.1当令牌相等时（第一次提交后两个令牌肯定是一样的）</span><br><span class="line">if(token.equals(&quot;pageToken&quot;))&#123;</span><br><span class="line">    执行正常提交数据后的处理操作;</span><br><span class="line">    ...</span><br><span class="line">&#125;else    &#x2F;&#x2F;4.2当令牌不相等时</span><br><span class="line">    提示用户不要重复提交表单;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;令牌机制&quot;&gt;&lt;a href=&quot;#令牌机制&quot; class=&quot;headerlink&quot; title=&quot;令牌机制&quot;&gt;&lt;/a&gt;令牌机制&lt;/h2&gt;&lt;p&gt;&lt;code&gt;token&lt;/code&gt;即标志、记号的意思，在IT领域也叫作&lt;code&gt;令牌&lt;/code&gt;。其实说的更通俗点可以
      
    
    </summary>
    
    
      <category term="令牌" scheme="http://yoursite.com/categories/%E4%BB%A4%E7%89%8C/"/>
    
    
      <category term="令牌" scheme="http://yoursite.com/tags/%E4%BB%A4%E7%89%8C/"/>
    
      <category term="小知识点" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
      <category term="表单提交" scheme="http://yoursite.com/tags/%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4/"/>
    
  </entry>
  
  <entry>
    <title>Spring容器bean的三种装配机制</title>
    <link href="http://yoursite.com/2020/01/11/Spring%E5%AE%B9%E5%99%A8bean%E7%9A%84%E4%B8%89%E7%A7%8D%E8%A3%85%E9%85%8D%E6%9C%BA%E5%88%B6/"/>
    <id>http://yoursite.com/2020/01/11/Spring%E5%AE%B9%E5%99%A8bean%E7%9A%84%E4%B8%89%E7%A7%8D%E8%A3%85%E9%85%8D%E6%9C%BA%E5%88%B6/</id>
    <published>2020-01-11T07:42:12.000Z</published>
    <updated>2020-01-12T02:19:11.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-配置bean的一些知识"><a href="#一-配置bean的一些知识" class="headerlink" title="一. 配置bean的一些知识"></a>一. 配置bean的一些知识</h2><ol><li>Spring容器负责创建应用程序中的bean并通过DI来协调这些对象的关系，作为开发人员，首先要先告诉Spring要创建哪些bean并且如何将其装配在一起，然后才能从容器中使用这些bean。</li><li>总计有三种配置方式，并且这三种方式是可以互相搭配的，即你可以选择使用XML来装配一些bean，使用Spring基于java（JavaConfig）的方式装配一些bean，然后剩余的bean让Spring去自动发现。</li><li>建议是尽可能使用自动配置的机制，显式配置越少越好。必须要显式配置的时候优先选择类型安全并且比XML更加强大的JavaConfig。最后只有当你想要使用便利的XML命名空间的时候，并且在JavaConfig中没有同样的实现时，才应该使用XML配置。</li></ol><h2 id="二-三种bean装配机制"><a href="#二-三种bean装配机制" class="headerlink" title="二. 三种bean装配机制"></a>二. 三种bean装配机制</h2><h3 id="方式1-在XML中进行显式配置"><a href="#方式1-在XML中进行显式配置" class="headerlink" title="方式1 在XML中进行显式配置"></a>方式1 在XML中进行显式配置</h3><p>1</p><h3 id="方式2-在java中进行显式配置"><a href="#方式2-在java中进行显式配置" class="headerlink" title="方式2 在java中进行显式配置"></a>方式2 在java中进行显式配置</h3><p>2</p><h3 id="方式3-隐式的bean发现机制和自动装配"><a href="#方式3-隐式的bean发现机制和自动装配" class="headerlink" title="方式3 隐式的bean发现机制和自动装配"></a>方式3 隐式的bean发现机制和自动装配</h3><p>Spring从两个角度来实现自动化装配 ：</p><ol><li>组件扫描：Spring会自动发现应用上下文所创建的bean（默认是不开启的）。</li><li>自动装配：Spring会自动满足bean之间的依赖。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一-配置bean的一些知识&quot;&gt;&lt;a href=&quot;#一-配置bean的一些知识&quot; class=&quot;headerlink&quot; title=&quot;一. 配置bean的一些知识&quot;&gt;&lt;/a&gt;一. 配置bean的一些知识&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Spring容器负责创建应用程序中的
      
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="Spring" scheme="http://yoursite.com/tags/Spring/"/>
    
      <category term="bean" scheme="http://yoursite.com/tags/bean/"/>
    
      <category term="配置" scheme="http://yoursite.com/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>hexo主题增加页面出现的bug</title>
    <link href="http://yoursite.com/2020/01/09/hexo%E4%B8%BB%E9%A2%98%E5%A2%9E%E5%8A%A0%E9%A1%B5%E9%9D%A2%E5%87%BA%E7%8E%B0%E7%9A%84bug/"/>
    <id>http://yoursite.com/2020/01/09/hexo%E4%B8%BB%E9%A2%98%E5%A2%9E%E5%8A%A0%E9%A1%B5%E9%9D%A2%E5%87%BA%E7%8E%B0%E7%9A%84bug/</id>
    <published>2020-01-09T12:46:26.000Z</published>
    <updated>2020-01-09T13:57:20.158Z</updated>
    
    <content type="html"><![CDATA[<p><strong>bug</strong>：在增加标签和分类页面后，点击标签或者分类图标时页面显示<em>Cannot GET /tags/%20/</em><br><strong>原因</strong>：不小心在修改主题配置文件 <strong><em>_config.yml</em></strong> 时，在 <strong>/</strong> 和 <strong>||</strong> 之间加多了空格,去掉就可以了。</p><p><strong>原先错误代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th</span><br></pre></td></tr></table></figure><p><strong>修改后的正确代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  tags: &#x2F;tags&#x2F;|| tags</span><br><span class="line">  categories: &#x2F;categories&#x2F;|| th</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;bug&lt;/strong&gt;：在增加标签和分类页面后，点击标签或者分类图标时页面显示&lt;em&gt;Cannot GET /tags/%20/&lt;/em&gt;&lt;br&gt;&lt;strong&gt;原因&lt;/strong&gt;：不小心在修改主题配置文件 &lt;strong&gt;&lt;em&gt;_config.ym
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="bug" scheme="http://yoursite.com/tags/bug/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇Blog</title>
    <link href="http://yoursite.com/2020/01/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87Blog/"/>
    <id>http://yoursite.com/2020/01/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87Blog/</id>
    <published>2020-01-06T14:44:44.000Z</published>
    <updated>2020-01-09T13:26:52.840Z</updated>
    
    <content type="html"><![CDATA[<p>  哈哈哈终于成功搭建好了hexo博客，这是我的第一篇个人博客！<br>  第一次写博客，好激动鸭ヽ(￣▽￣)ﾉ<br><code>date: 2020-01-06 22:44:44</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  哈哈哈终于成功搭建好了hexo博客，这是我的第一篇个人博客！&lt;br&gt;  第一次写博客，好激动鸭ヽ(￣▽￣)ﾉ&lt;br&gt;&lt;code&gt;date: 2020-01-06 22:44:44&lt;/code&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="第一次" scheme="http://yoursite.com/tags/%E7%AC%AC%E4%B8%80%E6%AC%A1/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/01/06/hello-world/"/>
    <id>http://yoursite.com/2020/01/06/hello-world/</id>
    <published>2020-01-06T14:32:20.588Z</published>
    <updated>2020-01-06T14:32:20.588Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
